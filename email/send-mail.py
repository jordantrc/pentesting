#!/usr/bin/python
#
#
# Usage: send-mail.py [OPTIONS]
#       -h print this message and quit
#       -s <server>[:port] - port is 25 unless specified
#       -f <from address>
#       -t <to address>
#       -S <Subject>
#       -b <body>
#       -A <attachment>

import os
import smtplib
import sys
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from getopt import getopt


def main():
    """main function"""

    # gather arguments
    opts, args = getopt(sys.argv[1:], "hs:f:t:S:b:A:", ["help"])
    attachment = None

    # argument parsing
    for o, a in opts:
        if o in ("-h", "--help"):
            print_help()
            sys.exit(0)
        elif o == "-s":
            mail_server_string = a
        elif o == "-f":
            from_address = a
        elif o == "-t":
            to_address = a
        elif o == "-S":
            subject = a
        elif o == "-b":
            body = a
        elif o == "-A":
            attachment = a
        else:
            assert False, "unhandled option"

    if len(opts) < 5:
        print("too few options")
        print_help()
        sys.exit(1)

    # parse mail server information
    if ":" in mail_server_string:
        mail_server, mail_port = mail_server_string.split(":")
    else:
        mail_server = mail_server_string
        mail_port = 25

    send_email(mail_server, mail_port, from_address, to_address, subject, body, attachment)

    sys.exit(0)


def send_email(mail_server, mail_port, from_addr, to_addr, subject, body, attachment):
    """sends email"""
    print("Sending mail from %s to %s with subject %s and attachment %s" % (from_addr, 
        to_addr, subject, attachment))
    mail_server = mail_server
    mail_port = mail_port

    # create the message use MIMEMultipart, MIMEText to deal with unicode
    msg = MIMEMultipart()
    msg['Subject'] = subject
    msg['From'] = from_addr
    msg['To'] = to_addr
    body = MIMEText(body, 'plain')
    msg.attach(body)
    #print(msg.as_string())

    # add attachment, if provided
    if attachment:
        try:
            with open(attachment, 'rb') as fp:
                attach = MIMEBase('application', "octet-stream")
                attach.set_payload(fp.read())
            encoders.encode_base64(attach)
            attach.add_header('Content-Disposition', 'attachment', filename=os.path.basename(attachment))
            msg.attach(attach)
        except:
            print("Unable to attach file, error: ", sys.exc_info())

    # send mail message
    smtp = smtplib.SMTP(mail_server, mail_port)
    try:
        smtp.sendmail(from_addr, to_addr, msg.as_string())
    except:
        print("Unexpected error:" + str(sys.exc_info()[0]))
    smtp.quit()


def print_help():
    '''prints a help message'''
    print("""Usage: send-mail.py [OPTIONS]
        -h print this message and quit
        -s <server>[:port] - port is 25 unless specified
        -f <from address>
        -t <to address>
        -S <Subject>
        -b <body>
        -A <attachment>""")


if __name__ == '__main__':
    main()

